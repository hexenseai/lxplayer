"""Add language target_audience audio_asset_id to TrainingSection and Asset

Revision ID: f3e8314d5f35
Revises: 4daddc3d6911
Create Date: 2025-09-09 18:58:41.682704

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f3e8314d5f35'
down_revision = '4daddc3d6911'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if columns exist before adding them
    connection = op.get_bind()
    
    # Check if language column exists in trainingsection
    result = connection.execute(sa.text("""
        SELECT column_name FROM information_schema.columns 
        WHERE table_name = 'trainingsection' AND column_name = 'language'
    """))
    if not result.fetchone():
        op.add_column('trainingsection', sa.Column('language', sa.String(), nullable=True, default='TR'))
    
    # Check if target_audience column exists in trainingsection
    result = connection.execute(sa.text("""
        SELECT column_name FROM information_schema.columns 
        WHERE table_name = 'trainingsection' AND column_name = 'target_audience'
    """))
    if not result.fetchone():
        op.add_column('trainingsection', sa.Column('target_audience', sa.String(), nullable=True, default='Genel'))
    
    # Check if audio_asset_id column exists in trainingsection
    result = connection.execute(sa.text("""
        SELECT column_name FROM information_schema.columns 
        WHERE table_name = 'trainingsection' AND column_name = 'audio_asset_id'
    """))
    if not result.fetchone():
        op.add_column('trainingsection', sa.Column('audio_asset_id', sa.String(), nullable=True))
        op.create_foreign_key('fk_trainingsection_audio_asset_id', 'trainingsection', 'asset', ['audio_asset_id'], ['id'])
    
    # Check if language column exists in asset
    result = connection.execute(sa.text("""
        SELECT column_name FROM information_schema.columns 
        WHERE table_name = 'asset' AND column_name = 'language'
    """))
    if not result.fetchone():
        op.add_column('asset', sa.Column('language', sa.String(), nullable=True))
    
    # Check if original_asset_id column exists in asset
    result = connection.execute(sa.text("""
        SELECT column_name FROM information_schema.columns 
        WHERE table_name = 'asset' AND column_name = 'original_asset_id'
    """))
    if not result.fetchone():
        op.add_column('asset', sa.Column('original_asset_id', sa.String(), nullable=True))
        op.create_foreign_key('fk_asset_original_asset_id', 'asset', 'asset', ['original_asset_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove foreign key constraints
    op.drop_constraint('fk_asset_original_asset_id', 'asset', type_='foreignkey')
    op.drop_constraint('fk_trainingsection_audio_asset_id', 'trainingsection', type_='foreignkey')
    
    # Remove columns from Asset table
    op.drop_column('asset', 'original_asset_id')
    op.drop_column('asset', 'language')
    
    # Remove columns from TrainingSection table
    op.drop_column('trainingsection', 'audio_asset_id')
    op.drop_column('trainingsection', 'target_audience')
    op.drop_column('trainingsection', 'language')
    # ### end Alembic commands ###
