"""Add evaluation criteria and results tables

Revision ID: f8db4719bcb5
Revises: 9e7d858adfba
Create Date: 2025-09-28 21:35:18.208512

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = 'f8db4719bcb5'
down_revision = '9e7d858adfba'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evaluationcriteria',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('training_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('section_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('applies_to_entire_training', sa.Boolean(), nullable=False),
    sa.Column('llm_evaluation_prompt', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('criteria_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['trainingsection.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['training.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluationreport',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('training_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('report_title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('detailed_analysis', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('recommendations', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('criteria_results_json', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('strengths', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('weaknesses', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('finalized_at', sa.DateTime(), nullable=True),
    sa.Column('generated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reviewed_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['generated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['interactionsession.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['training.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluationresult',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('criteria_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('training_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('evaluation_score', sa.Float(), nullable=True),
    sa.Column('evaluation_result', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('explanation', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('llm_model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('section_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_interactions_json', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('context_data_json', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('evaluated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['criteria_id'], ['evaluationcriteria.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['trainingsection.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['interactionsession.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['training.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('evaluationresult')
    op.drop_table('evaluationreport')
    op.drop_table('evaluationcriteria')
    # ### end Alembic commands ###
